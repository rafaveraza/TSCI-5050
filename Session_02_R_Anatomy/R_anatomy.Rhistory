foo$zipcode
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-simtrackfields(4999,'SA',filename = '/tmp/simtrack4x.csv')
View(foo)
View(foo)
install.packagest('blockspring')
install.packages('blockspring')
library(devtools)
install.packages('devtools'); library('devtools'); install_github('blockspring/blockspring.R');
# install.packages('devtools'); library('devtools'); install_github('blockspring/blockspring.R');
install_github('blockspring/blockspring.R');
library(devtools)
install_github('blockspring/blockspring.R');
foo <- blockspringRunParsed("fake-data-creator", list( "fake_row_count" = 50 ));
library(blockspring)
foo <- blockspringRunParsed("fake-data-creator", list( "fake_row_count" = 50 ));
names(foo)
foo$getHeaders()
names(foo)
class(foo$params)
dim(foo$params)
names(foo$params)
dim(foo$params$spreadsheet)
class(foo$params$spreadsheet)
names(foo$params$spreadsheet)
head(foo$params$spreadsheet)
sapply(foo$params$spreadsheet,function(xx),{split(xx[1],' ')})
sapply(foo$params$spreadsheet,function(xx),{strsplit(xx[1],' ')})
sapply(foo$params$spreadsheet,function(xx){strsplit(xx[1],' ')})
sapply(foo$params$spreadsheet,function(xx){strsplit(xx[1],' ')[[1]]})
sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(toupper(nm),paste0(rev(nm),collapse=','))})
sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm))})
head(foo$params$spreadsheet)
lapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm))})
sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm))})
head(foo$params$spreadsheet)
sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])})
do.call('rbind',sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])}))
bar<-sapply(foo$params$spreadsheet,function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])})
length(bar)
sapply(bar,length)
bar[[1]]
bar<-sapply(foo$params$spreadsheet[-1],function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])})
sapply(bar,length)
head(bar)
class(bar)
dim(bar)
bar<-t(sapply(foo$params$spreadsheet[-1],function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])}))
dim(bar)
head(bar)
bar<-setNames(data.frame(t(sapply(foo$params$spreadsheet[-1],function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])}))),c('contact_fullname','contact_fname','contact_lname','mailaddress'))
head(bar)
foo <- blockspringRunParsed("fake-data-creator", list( "fake_row_count" = 5000 ));
bar<-setNames(data.frame(t(sapply(foo$params$spreadsheet[-1],function(xx){nm<-strsplit(xx[1],' ')[[1]];c(paste0(rev(nm),collapse=','),toupper(nm),strsplit(xx[5],'\n')[[1]][1])}))),c('contact_fullname','contact_fname','contact_lname','mailaddress'))
dim(bar)
head(bar)
require('foobwar')
if(!require('foobwar'),print('nope'))
if(!require('foobwar')) print('nope')
if(!require('nlme')) print('nope')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
bar <- simtrackfields()
head(bar)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
bar <- simtrackfields()
View(bar)
View(bar)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
bar <- simtrackfields()
dim(bar)
View(bar)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo <- simtrackfields(5000,file='/tmp/test5k.csv')
View(foo)
View(foo)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
simtrackfields(50,file='/tmp/test5k.csv')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-simtrackfields(file='/tmp/test.csv')
View(foo)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-simtrackfields(file='/tmp/test.csv')
View(foo)
library('blockspring')
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=200))$params$spreadsheet[-1];
length(bscontacts)
round(50*.8)*5
ln<-round(50*.8)*5
idx<-embed(1:ln,5)
head(idx)
idx<-sample(1:ln,50,rep=T)
head(idx)
foo<-matrix(idx,ncol=5)
head(foo)
length(foo)
idx<-sample(1:ln,round(ln/.8),rep=T)
length(idx)
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
head(idx)
length(idx)
length(unique(idx))
head(c(idx))
length(c(idx))
length(unique(c(idx)))
145/250
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
length(unique(c(idx)))/length(c(idx))
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
length(unique(c(idx)))/length(c(idx))
head(idx)
apply(idx,1,sample,2,rep=T)
t(apply(idx,1,sample,2,rep=T))
nrow(idx)
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
t(apply(idx,1,sample,2,rep=T)
)
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
.junk<-t(apply(idx,1,sample,2,rep=T))
.junk<-t(apply(idx,1,sample,5,rep=T))
head(.junk)
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
.junk<-t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T)))
head(.junk)
.junk<-t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T)))
idx<-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5)
.junk<-cbind(t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T))),t(apply(idx,1,sample,2,rep=T)))
head(.junk)
.junk<-cbind(t(apply(idx,1,sample,2,rep=T)),t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T))))
head(.junk)
.junk<-cbind(t(apply(idx,1,sample,2,rep=T)),t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T))))[c(1,3:7,2)]
head(.junk)
.junk<-cbind(t(apply(idx,1,sample,2,rep=T)),t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T))))[,c(1,3:7,2)]
head(.junk)
apply(.junk,2,function(xx) sum(is.na(xx)))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
require('blockspring');
require('rjson');
il<-50;ln<-round(il*.8)*5
idx <-matrix(sample(1:ln,round(ln/.8),rep=T),ncol=5);
idx <- cbind(t(apply(idx,1,sample,2,rep=T)),t(apply(idx,1,function(xx) sample(c(xx,NA),5,rep=T))))[,c(1,3:7,2)];
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=length))$params$spreadsheet[-1];
library(devtools)
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=length))$params$spreadsheet[-1];
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=length))
names(bscontacts)
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=length))
bscontacts <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=ln))$params$spreadsheet[-1];
names(bscontacts)
length(bscontacts)
bscontacts[[3]]
class(bscontacts[[3]])
c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1)))
paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-')
paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-')
paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-')
rep(3,paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-'))
rep(paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-')),3)
rep(runif(3),3)
rep(paste0(c(sample(100:999,1),sample(100:999,1),sprintf('%04d',sample(0:9999,1))),collapse='-'),3)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts)
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts[[3]])
foo
toaddr
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
rm(toaddr)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
toaddr
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-toaddr(bscontacts[[3]])
foo
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
toaddr(bscontacts[[3]])
foo<-toaddr(bscontacts[[3]])
foo
head(idx)
bar<-sapply(bscontacts,toaddr)
head(bar)
dim(bar)
bar<-t(sapply(bscontacts,toaddr))
head(bar)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
bar<-t(sapply(bscontacts,toaddr))
bar
head(bar)
baz<-bar[idx[,1],]
head(baz)
baz<-bar[NA,]
baz
head(idx)
baz<-bar[idx[,7],]
bax<-apply(idx[,2:6],2,function(xx) bar[xx,])
dim(bax)
head(t(bax))
head(bax)
bax<-sapply(data.frame(idx[,2:6]),function(xx) bar[xx,])
dim(bax)
head(bax)
tail(bax)
head(idx)
bax<-bar[idx[,3],]
head(bax)
bax<-sapply(2:6,function(ii) bar[idx[,ii],])
dim(bax)
head(bax)
bax<-lapply(2:6,function(ii) bar[idx[,ii],])
names(bax)
head(bax[[1]])
bax<-lapply(2:6,function(ii) bar[idx[,ii],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP')])
head(bax[[1]])
baz<-bar[idx[,1],c('NAME','ZIP','STATE','CITY','ADDR_1','ADDR_2','HOME_PHONE','WORK_PHONE','EMAIL')]
head(baz)
class(bar)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
colnames(bar)
colnames(bar)<-paste('PAT_',colnames(bar))
head(bar)
colnames(bar)<-paste0('PAT_',colnames(bar))
head(bar)
baz<-bar[idx[,1],c('NAME','ZIP','STATE','CITY','ADDR_1','ADDR_2','HOME_PHONE','WORK_PHONE','EMAIL')]
bar<-t(sapply(bscontacts,toaddr))
baz<-bar[idx[,1],c('NAME','ZIP','STATE','CITY','ADDR_1','ADDR_2','HOME_PHONE','WORK_PHONE','EMAIL')]
colnames(baz)<-paste0('PAT_',colnames(baz))
head(baz)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
oo1<-lapply(2:5,function(ii) bar[idx[,ii],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP')])
names(oo1)<-c('MOTHER_','FATHER_','GUARDIAN_','EMERG1_')
oo2<-lapply(names(oo1),function(ii) {names(oo1[[ii]])<-paste0(ii,names(oo1[[ii]]));oo1[[ii]]})
names(oo2)
head(oo2[[2]])
oo2<-lapply(names(oo1),function(ii) {names(oo1[[ii]])<-paste0(ii,names(oo1[[ii]]));browser();oo1[[ii]]})
ii
head(oo1[[ii]])
names(oo1[[ii]])
class(oo1)
ii
head(oo1[[ii]])
q
!   Q
oo2<-lapply(names(oo1),function(ii) {colnames(oo1[[ii]])<-paste0(ii,colnames(oo1[[ii]]));oo1[[ii]]})
head(oo2[[3]])
oo2<-sapply(names(oo1),function(ii) {colnames(oo1[[ii]])<-paste0(ii,colnames(oo1[[ii]]));oo1[[ii]]})
dim(oo2)
head(oo2)
oo2<-do.call(cbind,lapply(names(oo1),function(ii) {colnames(oo1[[ii]])<-paste0(ii,colnames(oo1[[ii]]));oo1[[ii]]}))
head(oo2)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
oo<-do.call(cbind,lapply(names(oo1),function(ii) {colnames(oo1[[ii]])<-paste0(ii,colnames(oo1[[ii]]));oo1[[ii]]}))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
oo1<-bar[idx[,6],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP','CELL_PHONE')]);
oo1<-bar[idx[,6],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP','CELL_PHONE')])];
oo1<-bar[idx[,6],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP','CELL_PHONE')];
head(oo1)
colnames(oo1) <- paste0('EMERG2_',colnames(oo1))
head(oo1)
oo1<-bar[idx[,6],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP','HOME_PHONE','WORK_PHONE','CELL_PHONE')]);
oo1<-bar[idx[,6],c('NAME','ADDR_1','ADDR_2','CITY','STATE_C','STATE','ZIP','HOME_PHONE','WORK_PHONE','CELL_PHONE')];
head(oo1)
dim(oo1)
colnames(oo1)[10]
colnames(oo1)[10]<-'EMPLOYER_PHONE'
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-fakemr(50)
head(foo)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
head(fakemr(50))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
head(fakemr(50))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
head(fakemr(50))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
head(fakemr(50))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
head(fakemr(50))
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-simcontact(50)
head(foo)
list.files(patt='csv')
foo<-simcontact(5000)
View(foo)
View(foo)
bar <- blockspringRunParsed("fake-data-creator",list("fake_row_count"=50))
class(bar)
length(bar)
str(bar)
class(bar$params)
length(bar$params)
length(bar$params$spreadsheet)
bar$params$spreadsheet[[1]]
bar$params$spreadsheet[[5]]
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
foo<-simcontact(5000)
View(foo)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
simcontact(10000)
source('~/dx/13_dw.tirado/gpc_obesity/redcap/simtrackfields.R')
# foo
1 = foo
foo = 1
foo
foo = x
foo = "x"
foo
?abline
example(abline)
ls()
rm(ls())
rm(list=ls())
ls()
foo <- 'x'
bar <- 5
bat <- 7
log(bat)
bar ^ 10
bat %% bar
bat/bar
bat^bar
bat%bar
bat%/%bar
?+
bar * (bar + bar/bat)
log(bar)
abline(bar, bat)
bar; foo; bat
foo<bat
foo>bat
if(foo) (bar-bat)
if(foo==0) {bar-bat}
if(foo==0) {bar-bat}else {bar/bat}
if(foo==1) {bar-bat}else {bar/bat}
if(foo!=1) {bar-bat}else {bar/bat}
if(foo!=1) {bar-bat}else {bar/bat} else {bar+bat}
if(foo!=1) {bar-bat}else if {bar/bat} else {bar+bat}
if(T) {bar-bat}else if (foo!=0) {bar/bat} else {bar+bat}
if(F) {bar-bat}else if (foo!=0) {bar/bat} else {bar+bat}
if(F) {bar-bat}else if (F) {bar/bat} else {bar+bat}
42[1]
c[1,2,3,4]
c(1,2,3,4)
x=c(1,2,3,4)
x
for(ii in x) {sqrt(ii)}
for(ii in x) {print(sqrt(ii))}
sqrt(x)
print("Hello world")
i = 0
while (i < x){i=i+1 i}
while (i < x){i=i+1; i}
i-x
i<x
while (i < 5){i=i+1; i}
while (i < 5){i=i+1; print(i)}
i
i = 0
while (i < 5){i=i+1; print(i)}
for (i in 1:5) print(i)
10:1
1:10
c(1:5, 8:10)
plot(x)
plot(x)
a<-rnorm(100,10,sd = 3)
z<-matrix(a)
nrow(z)
ncol(z)
dim(z)
z2<-matrix(z,10,10)
z2
plot(z2)
summary(a)
sd(a)
for i in col(z2) sd(i)
for( i in col(z2)) sd(i)
for( i in col(z2)) print sd(i)
for( i in col(z2)) print (sd(i))
col(z2)
?col
for( i in ncol(z2)) print (sd(i))
i<-ncol(z2)
i
sd(i)
for( i in range(1:ncol(z2))) print (sd(i))
range(1:ncol(10))
range(1:ncol(z2))
for( i in 1:ncol(z2)) print (sd(i))
for( i in 1:ncol(z2)) print (sd(z2[,i]))
x
x^2
x/3
z2/3
z2^5
apply( z2,2,sd)
for( i in 1:ncol(z2)) print (sd(z2[,i]))
riddle <- setNames
riddle
setNams
setNames
x
setNames(x,LETTERS[1:4])
LETTERS
letters
colors
LETTERS
letters
setNames(x,LETTERS[1:4])
x
riddle(x,LETTERS[1:4])
"ASSGFG"
'"'ASSGFG'
'ASSGFG'
"x"
"foo"
foo
x
y
"y"
`x`
x
`+`
`*`
`%%`
%%
?%%
?+
?`+`
`+` <- function(aa,bb) paste0(aa,bb)
'zz' + 'xx'
3 + 7
ls()
rm(+)
rm(`+`)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
bar < -simdat()
ls()
xx
xx <- 25
datecol<-sample(10000:20000,xx,rep=T)
outcmcol<-sample(0:1,xx,rep=T)
numvcol <- rnorm(xx)
charvcol <- sample(LETTERS,xx,rep=T)
return(data.frame(date=datecol,out=outcol,numv=numvcol,charv=charvcol))
ls()
return(data.frame(date=datecol,out=outcmcol,numv=numvcol,charv=charvcol))
source('~/.active-rstudio-document')
bar < -simdat()
ls()
head(charvcol)
head(datecol)
head(numcol)
head(numvcol)
head(charvcol)
head(outcmcol
)
outcmc ol
outcmcol
data.frame(datecol,outcmcol)
data.frame(datecol,outcmcol,numvcol)
data.frame(datecol,outcmcol,numvcol,charvcol)
data.frame(date=
datecol,outcmcol,numvcol,charvcol)
data.frame(date=
datecol,outcome=outcmcol,numv=numvcol,charv=charvcol)
return(data.frame(date=
datecol,outcome=outcmcol,numv=numvcol,charv=charvcol))
source('~/.active-rstudio-document')
bar < -simdat()
bar
bar < -simdat(60)
source('~/.active-rstudio-document')
bar < -simdat(60)
out
out
return(out)
savehistory('/tmp/TSCI-5050/R_anatomy.Rhistory')
